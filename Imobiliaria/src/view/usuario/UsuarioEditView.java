/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.usuario;

import control.UsuarioController;
import java.awt.Color;
import java.awt.Frame;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import model.usuario.UsuarioEntity;

/**
 *
 * @author eder
 */
public class UsuarioEditView extends javax.swing.JDialog {

    /**
     * Creates new form UsuarioEditView
     */
    private UsuarioController usuarioController;
    private List lista;

    public UsuarioEditView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.usuarioController = new UsuarioController();
        initComponents();
    }

    public UsuarioController getUsuarioController() {
        return usuarioController;
    }

    public void setUsuarioController(UsuarioController usuarioController) {
        this.usuarioController = usuarioController;
        setValues();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTFNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTFLogin = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPFSenha = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jPFConfirmaSenha = new javax.swing.JPasswordField();
        jBSalvar = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();

        setTitle("Cadastro de Usuário");

        jLabel1.setText("Nome*:");

        jLabel2.setText("Login*:");

        jLabel3.setText("Senha*:");

        jLabel4.setText("Confime Senha*:");

        jBSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/small_ok.png"))); // NOI18N
        jBSalvar.setToolTipText("Ok");
        jBSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalvarActionPerformed(evt);
            }
        });

        jBCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/small_exit.png"))); // NOI18N
        jBCancelar.setToolTipText("Cancelar Cadastro");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(256, 256, 256)
                .addComponent(jBSalvar)
                .addGap(18, 18, 18)
                .addComponent(jBCancelar))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4)))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPFConfirmaSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPFSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFNome, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel1))
                    .addComponent(jTFNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTFLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jPFSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jPFConfirmaSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBSalvar)
                    .addComponent(jBCancelar)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalvarActionPerformed
        // TODO add your handling code here:

        lista = usuarioController.getUsuarioDao().findAll();

        List<String> listaErros;

        boolean existeLogin = false;
        boolean cadastrou = false;
        boolean valido = true;

        listaErros = validar();

        if (listaErros.size() > 0) {
            StringBuilder sb = new StringBuilder();
            for (String s : listaErros) {
                sb.append(s).append("\n");
            }
            JOptionPane.showMessageDialog(null, sb.toString());
            valido = false;
        }

        for (int i = 0; i < lista.size(); i++) {
            usuarioController.setUsuario((UsuarioEntity) lista.get(i));
            if (jTFLogin.getText().equals(usuarioController.getUsuario().getLogin())) {
                JOptionPane.showMessageDialog(null, "Login Indisponível, Já Cadastrado no Sistema");
                existeLogin = true;
                break;
            }
        }
        //Instanciando novamente para evitar que ao percorrer o for o Controller fique com o ID de outro Cadastro
        usuarioController = new UsuarioController();
        
        usuarioController.getUsuario().setNome(jTFNome.getText().trim());
        usuarioController.getUsuario().setLogin(jTFLogin.getText().trim());
        usuarioController.getUsuario().setSenha(jPFSenha.getText().trim());
        
        listaErros = null;
        if (!jPFSenha.getText().equals(jPFConfirmaSenha.getText())) {
            JOptionPane.showMessageDialog(null, "Senha Não Confere");
        } else if (!existeLogin && valido) {
//            UsuarioController.setUsuarioCurrent(usuarioController.getUsuario());
            cadastrou = true;
        }

        if (cadastrou) {
            dispose();
            UsuarioView view = new UsuarioView(new Frame(), true);
            view.setUsuarioController(usuarioController);
            view.setLocationRelativeTo(null);
            view.setVisible(true);
        }
    }//GEN-LAST:event_jBSalvarActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBCancelarActionPerformed

    private List<String> validar() {
        List<String> lista = new ArrayList<String>(3);

//        if (this.usuarioController.getUsuario().getNome().equals("") || this.usuarioController.getUsuario().getNome().length() > 50) {

        if (this.jTFNome.getText().trim().equals("") || this.jTFNome.getText().length() > 50) {
            lista.add("Nome Inválido");
            this.jTFNome.setForeground(Color.red);
        } else {
            this.jTFNome.setForeground(Color.BLACK);
        }

//        if (this.usuarioController.getUsuario().getLogin().equals("") || this.usuarioController.getUsuario().getLogin().length() > 10) {
        if (this.jTFLogin.getText().trim().equals("") || this.jTFLogin.getText().length() > 10) {
            lista.add("Login Inválido");
            this.jTFLogin.setForeground(Color.red);
        } else {
            this.jTFLogin.setForeground(Color.BLACK);
        }

//        if (this.usuarioController.getUsuario().getSenha().equals("") || this.usuarioController.getUsuario().getSenha().length() > 16) {
        if (this.jPFSenha.getText().trim().equals("") || this.jPFSenha.getText().length() > 16) {
            lista.add("Senha Inválida");
            this.jTFLogin.setForeground(Color.red);
        } else {
            this.jPFSenha.setForeground(Color.BLACK);
        }
        return lista;
    }

    public void setValues() {
        jTFNome.setText(this.usuarioController.getUsuario().getNome());
        jTFLogin.setText(this.usuarioController.getUsuario().getLogin());
//        jPFSenha.setText(UsuarioController.getUsuarioCurrent().getSenha());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UsuarioEditView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UsuarioEditView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UsuarioEditView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UsuarioEditView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UsuarioEditView dialog = new UsuarioEditView(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField jPFConfirmaSenha;
    private javax.swing.JPasswordField jPFSenha;
    private javax.swing.JTextField jTFLogin;
    private javax.swing.JTextField jTFNome;
    // End of variables declaration//GEN-END:variables
}
